Python 3.12.4 (tags/v3.12.4:8e8a4ba, Jun  6 2024, 19:30:16) [MSC v.1940 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> def cont_char(text,char):
...     cont=0
...     for c in text:
...             if c==char:
...                     cont+=1
... return cont
  File "<stdin>", line 6
    return cont
    ^^^^^^
SyntaxError: invalid syntax
>>> def count_char(text,char):
...     count=0
...     for c in text:
...             if c==char:
...                     count+=1
...     return count
...
>>> filename=input('Enter a filename:')
Enter a filename:
>>> with open(filename) as f:
...     text=f.text
...
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
FileNotFoundError: [Errno 2] No such file or directory: ''
>>> with open(filename) as f:
...     text=f.read()
...
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
FileNotFoundError: [Errno 2] No such file or directory: ''
>>> def count_char(text,char):
...     count=0
...     for c in text:
...             if c==char:
...                     count+=1
...     return count
...
>>> filename=input('Enter a filename:')
Enter a filename:text.txt
>>> with open(filename) as f:
...     text=f.read()
...
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
FileNotFoundError: [Errno 2] No such file or directory: 'text.txt'
>>> print(count_char(text,'r'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'text' is not defined. Did you mean: 'next'?
>>> def apply_twice(func,arg):
...     return func(func(arg))
...
>>> def add_five(x);
  File "<stdin>", line 1
    def add_five(x);
                   ^
SyntaxError: expected ':'
>>> def add_five(x):
...     return x+5
...
>>> print(apply_twice(add_five,10))
20
>>> def mult(x):
...     return x*x
...
>>> print(apply_twice(mult,2))
16
>>> def pure_function(x,y):
...     temp=x+y*2
...     return temp/(2*x+y)
...
>>> print(pure_function(7,9))
1.0869565217391304
>>> print(pure_function(7,7))
1.0
>>> print(pure_function(100,10))
0.5714285714285714
>>> def polynomial(x);
  File "<stdin>", line 1
    def polynomial(x);
                     ^
SyntaxError: expected ':'
>>> def polynomial(x):
...     return x**2+5*x+4
...
>>> print(polynomial(-4))
0
>>> a=(lambda x:x*x)(8)
>>> print(a)
64
>>> def add_five(x):
...     return x+5
...
>>> nums=[11,22,33,44,55]
>>> result=list(map(add_five,nums))
>>> print(result)
[16, 27, 38, 49, 60]
>>> result=list(map(lambda x:x+5,nums))
>>> print(result)
[16, 27, 38, 49, 60]
>>> result=list(map(lambda x:x+6,nums))
>>> print(result)
[17, 28, 39, 50, 61]
>>> nums=[11,22,33]
>>> a=list(map(lambda x:x*2,nums))
>>> print(a)
[22, 44, 66]
>>> def func_1(x):
...     if x%2==0:
...             return x
...
>>> nums=[11,22,33,44,55]
>>> result=list(filter(func_1,nums))
>>> print(result)
[22, 44]
>>> 自己改进的
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name '自己改进的' is not defined
>>> def countdown():
...     i=5
...     while i > 0:
...             yiled i
  File "<stdin>", line 4
    yiled i
          ^
SyntaxError: invalid syntax
>>> def countdown():
...     i=5
...     while i > 0:
...             yield i
...             i-=1
...
>>> for i in countdown():
...     print(i)
...
5
4
3
2
1
>>> def numbers(x):
...     for i in range(x):
...             if i%2==0:
...                     yield i
...
>>> print(list(numbers(11)))
[0, 2, 4, 6, 8, 10]
>>> def make_word():
...     word=''
...     for n in 'spam':
...             word+=n
...             yield word
...
>>> print(list(make_word()))
['s', 'sp', 'spa', 'spam']
>>> def decor(func)：
  File "<stdin>", line 1
    def decor(func)：
                   ^
SyntaxError: invalid character '：' (U+FF1A)
>>> def decor(func):
...     def wrap():
...             print('==========')
...             func()
...             print('==========')
...     retunrn wrap
  File "<stdin>", line 6
    retunrn wrap
            ^^^^
SyntaxError: invalid syntax
>>> def decor(func):
...     def wrap():
...             print('==========')
...             func()
...             print('==========')
...             retunrn wrap
  File "<stdin>", line 6
    retunrn wrap
            ^^^^
SyntaxError: invalid syntax
>>> def decor(func):
...     def wrap():
...             print('==========')
...             func()
...             print('==========')
...     return wrap
... def print_text():
  File "<stdin>", line 7
    def print_text():
    ^^^
SyntaxError: invalid syntax
>>> def decor(func):
...     def wrap():
...             print('==========')
...             func()
...             print('==========')
...     return wrap
...
>>> def  print_text():
...     print('hello world')
...
>>> decorated=decor(print_text)
>>> decorated()
==========
hello world
==========
>>> def factorial(x):
...     if x==1
  File "<stdin>", line 2
    if x==1
           ^
SyntaxError: expected ':'
>>> def factorial(x):
...     if x==1:
...             return 1
...     else:
...             return x*factorial(x-1)
...
>>> print(factorial(5))
120
>>> def sum_to(x):
...     return x+sum_to(x-1)
...
>>> print(sum_to(5))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 2, in sum_to
  File "<stdin>", line 2, in sum_to
  File "<stdin>", line 2, in sum_to
  [Previous line repeated 996 more times]
RecursionError: maximum recursion depth exceeded
>>> def sum_to(x):
...     if x>0:
...             return x+sum_to(x-1)
...
>>> print(sum_to(5))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in sum_to
  File "<stdin>", line 3, in sum_to
  File "<stdin>", line 3, in sum_to
  [Previous line repeated 2 more times]
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
>>> def sum_to(x):
...     if x>0:
...             x+=x+sum_to(x-1)
...             return x
...
>>> print(sum_to(5))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in sum_to
  File "<stdin>", line 3, in sum_to
  File "<stdin>", line 3, in sum_to
  [Previous line repeated 2 more times]
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
>>> def sum_to(x):
...     if x>0:
...             x=x+sum_to(x-1)
...             return x
...
>>> print(sum_to(5))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in sum_to
  File "<stdin>", line 3, in sum_to
  File "<stdin>", line 3, in sum_to
  [Previous line repeated 2 more times]
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
>>> def sum_to(x):
...     if x>0:
...             x+=x+sum_to(x-1)
...             return x
...     else:
...             return 0
...
>>> print(sum_to(5))
30
>>> print(sum_to(5))
30
>>>
